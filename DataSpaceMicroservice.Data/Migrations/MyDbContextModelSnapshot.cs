// <auto-generated />
using System;
using DataSpaceMicroservice.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataSpaceMicroservice.Data.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DataSpaceMicroservice.Data.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DataSpaceDirName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("DataSpaceMicroservice.Data.Models.DSDirectory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DirName");

                    b.Property<bool>("Empty");

                    b.Property<DateTime>("LastAccessTime");

                    b.Property<DateTime>("LastModifiedTime");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.ToTable("Directories");
                });

            modelBuilder.Entity("DataSpaceMicroservice.Data.Models.DSFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("DirectoryId");

                    b.Property<string>("FileName");

                    b.Property<DateTime>("LastAccessTime");

                    b.Property<DateTime>("LastModifiedTime");

                    b.Property<string>("MimeType");

                    b.Property<int>("OwnerId");

                    b.Property<string>("Path");

                    b.HasKey("Id");

                    b.HasIndex("DirectoryId");

                    b.HasIndex("OwnerId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("DataSpaceMicroservice.Data.Models.FileAccountShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<int>("FileId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("FileId");

                    b.ToTable("FileAccountShares");
                });

            modelBuilder.Entity("DataSpaceMicroservice.Data.Models.DSFile", b =>
                {
                    b.HasOne("DataSpaceMicroservice.Data.Models.DSDirectory", "Directory")
                        .WithMany("Files")
                        .HasForeignKey("DirectoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataSpaceMicroservice.Data.Models.Account", "Owner")
                        .WithMany("OwningFiles")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DataSpaceMicroservice.Data.Models.FileAccountShare", b =>
                {
                    b.HasOne("DataSpaceMicroservice.Data.Models.Account", "Account")
                        .WithMany("SharedFiles")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DataSpaceMicroservice.Data.Models.DSFile", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
